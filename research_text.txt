What are the computational limitations on predicting and understanding the physical world? How are these limitations manifested in practice? Vice versa, can we harness the complexity of quantum systems as computing devices in order to overcome those limitations and learn about hitherto unknown physics? To shed light on those questions, I study what one might call quantum computational physics. 

What is the computational power of quantum systems? 
---------------------------------------------------

It is an insight of Paul Benioff, Richard Feynman, David Deutsch and others in the late 20th century that we can harvest precise control of quantum systems computationally: Controlled quantum devices allow for efficient simulations and computations in cases in which any classical algorithm would require exponential time. But what does that mean in practice? Today, we are at an extremely exciting stage. We---or, rather, extremely clever physicists and engineers in well organized labs---can actually control individual quantum systems to the extent required for quantum computers. Not on the required scale quite yet, but it's a start. You'll be wondering: Can we actually perform computations that cannot be done on any of our classical supercomputers then? <br>

This is precisely one of the questions I have been working on over the last years. 
	- Architectures
	- Xanadu

How can we characterize quantum devices and verify quantum computations? 
---------------------------------------------------

Verifying analog and digital quantum computations

	- direct certification
	- sample complexity 

Characterizing analog quantum simulators

	- Hamiltonian identification and scalable learning 


What are the physical mechanisms that obstruct our simulations? 
---------------------------------------------------

Sign problem 
	- Easing Monte Carlo

Understanding the physics of quantum computers

	- Joe 
	- Soumik



What does quantum computing mean for how we do science?
---------------------------------------------------


	- Book
	- How engineer 


